{"name":"staus","displayName":"staus","exported":1650172848,"pages":[
{"title":"sta","created":1611747651,"updated":1611749211,"id":"601151427216ac0022dd45e8","lines":["sta","[https://gyazo.com/505861e8a5c21ae87eb972c4affd8841]",""," [/sta]のUserScript置き場です"," 他者さんのスクリプト"," \tfrom (URL) という形で引用元を示してます"," \t特に断りがなければ、丸々コピペしたり好き勝手にいじったりしています"," \t問題がある場合はご一報ください","\t \t[/sta/お問い合わせ]","","code:script.js"," //import {xxx} from '/api/code/staus/insert-text/script.js';",""]},
{"title":"entrypoint","created":1626261645,"updated":1626261731,"id":"60eec88ba6bb16001faed8c6","lines":["entrypoint","code:script.js"," // alert('hey!')",""]},
{"title":"list-pages-with-specific-tag","created":1614245537,"updated":1622937035,"id":"60376e9e9444d9002349fa8b","lines":["list-pages-with-specific-tag"," [WORK-list-pages-with-specific-tag]","\t\t読んだマンガ一覧などのために `[pagetitle.icon] [pagetitle]`版も試してみる"," 指定タグを含むページを`[pagetitle]`の行で取得してクリップボードにコピペ"," 使い方"," \t「指定タグ」のページを開く"," \tpage menuボタン押して実行"," \tしばらくしたらクリップボードにコピペされる"," TODO"," \tuse scrapbox.Page.title","","from [/villagepump/@sta#6035ee101280f00000a373fd] by [/takker]","code:script.js"," export const dummy_SYFVbz4x = ''"," "," const c = console.log;"," const dom = document.getElementsByClassName('line-title');"," const innerText = dom[1].innerText;"," c(dom);"," c(innerText);"," "," scrapbox.PageMenu.addMenu({","   title: 'Copy back links',","   image: '/assets/img/favicon/chrome-icon-192.png',","   onClick: async () => {","     //const text = document.getElementById('text-input').value;","     //console.log(`target text is \"${text}\"`);","     //if (!isLink(text)) console.log('is not link!'); return;","     const text = getCurrentTitle();","     const linkedGrammerText = `[${text}]`","     const {project, title: link} = getLink(linkedGrammerText);","     console.log(`Searching for back links of [/${project}/${link}]...`);","     const backLinks = getBackLinks(link, await fetchAllLinks(project));","     if (backLinks.length === 0) {","       console.log('No back link found.');","       return;","     }","     console.log('Copy back links: ', backLinks);","     navigator.clipboard","       .writeText(backLinks.map(link => project === scrapbox.Project.name ? ","         `[${link}]` : `[/${project}/${link}]`).join('\\n'))","       .then(() => console.log('Copied.'));","   },"," });"," "," const getCurrentTitle = () => {","     const dom = document.getElementsByClassName('line-title');","     const innerText = dom[1].innerText; // なんか2要素あって, 2番目に入ってるので手抜きで決め打ちしちゃった","     const title = innerText","     return title"," }"," "," const isLink = text => /\\[[^\\]]+\\]/.test(text);"," const getLink = text => {","   const linkText = text.match(/\\[([^\\]]+)\\]/)[1];","   const temp = linkText.match(/\\/([-\\w]+)\\/(.*)/);","   if (temp) return {project: temp[1], title: temp[2]};","   return {project: scrapbox.Project.name, title: linkText};"," };"," "," function getBackLinks(targetLink, linksData) {","  return linksData","    .filter(({links}) => links.some(link => lc(targetLink) === lc(link)))","    .map(({title}) => title);"," }"," "," async function fetchAllLinks(project) {","   let followingId = null;","   const linksData = [];","   const promises = []; //処理待ち用","   do {","     const response = await (!followingId ? ","       fetch(`/api/pages/${project}/search/titles`) :","       fetch(`/api/pages/${project}/search/titles?followingId=${followingId}`)","       )","     followingId = response.headers.get('X-Following-Id');","     promises.push(response.json().then(links => linksData.push(...links)));","   } while(followingId);","   // 全てのリンク情報を配列に格納し終わったら返す","   await Promise.all(promises);","   return linksData;"," }"," "," function lc(title) {","   return title.toLowerCase().replace(' ', '_');"," }",""]},
{"title":"WORK-list-pages-with-specific-tag","created":1614423780,"updated":1614423810,"id":"603a26e3e341b8002311d278","lines":["WORK-list-pages-with-specific-tag","1","\t発動条件がわからん","\ttext-input"," \tカーソル位置"," それが isLinks() だった場合"," \t正規表現で `[この中を判定している]`"," Firefoxだからか、textが常に空文字になる","","2"," まずはハードコードで動かす"," いけた"," \t`const text = '[大企業病]';`"," \t[https://scrapbox.io/files/603a241040407e001cc32c92.png]"," じゃあ「今開いているタイトル名」にしてみようか"," \tclassは`line-title`"," \ttextどうやって取るんだこれ","\t \t[https://scrapbox.io/files/603a24a0e341b8002311d1af.png]","\t\t配列でgetしたのをjoinすればいいんだろうけど","\t\tjQueryもDOMももう忘れたのでそっから","\t\tcode:js","\t\t  const c = console.log;","    const dom = document.getElementsByClassName('line-title');","    const innerText = dom[1].innerText;","    c(dom);","    c(innerText);","\t組み込んだ"," オッケー"]},
{"title":"insert-text","created":1611747883,"updated":1611783113,"id":"60115229b3a98e001cef653b","lines":["insert-text","from [/programming-notes/テキストを挿入するUserScript]","code:script.js"," export function insertText(text) {","   const cursor = document.getElementById('text-input');","   cursor.focus();","   cursor.value = text;","   const uiEvent = document.createEvent('UIEvent');","   uiEvent.initEvent('input', true, false);","   cursor.dispatchEvent(uiEvent);"," }","","code:use.js"," import {insertText} from '/api/code/staus/insert-text/script.js';"," "," insertText('foo!')"," "," insertText('foo\\n bar\\n  buz')"," "," // 読み込みに時間かかるので wait しなくても猶予ある → 意外となかったｗ"," //function f(){"," //\tinsertText('foo!')"," //}"," //const waitingmsec = 3500"," //setTimeout(f, waitingmsec) ","","修正した","\t`{text}`じゃなくて`text`（引数分割束縛要らない）",""]},
{"title":"settings","created":1611748701,"updated":1611748701,"id":"6011555a9148440022ea6141","lines":["settings","code:style.css"," /* disable hilight in inline */"," code.code span {"," \tcolor: inherit !important;"," }"]}
]}